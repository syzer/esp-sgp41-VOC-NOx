[package]
edition = "2021"
name = "esp_sgp41_voc_nox"
version = "0.1.0"

[features]
default = ["esp32c6"]
esp32c6 = ["esp-hal/esp32c6", "esp-hal-embassy/esp32c6", "esp-wifi/esp32c6", "esp-hal-smartled", "smart-leds", "fugit"]
esp32s3 = []

[[bin]]
name = "esp-sgp41-VOC-NOx"
path = "./src/bin/main.rs"
test = false

[[test]]
harness = false
name    = "hello_test"

[lib]
test = false

[dependencies]
esp-hal-smartled = { git = "https://github.com/esp-rs/esp-hal-community.git", package = "esp-hal-smartled", branch = "main", features = ["esp32c6"], optional = true }
smart-leds = { version = "0.4.0", optional = true }
fugit = { version = "0.3", optional = true }

defmt = "1.0.1"
esp-bootloader-esp-idf = "0.1.0"
esp-hal = { version = "=1.0.0-beta.1", features = [
  "defmt",
  "esp32c6",
  "unstable",
] }

bt-hci = { version = "0.2.1", features = [] }
critical-section = "1.2.0"
embassy-executor = { version = "0.7.0", features = [
  "defmt",
  "task-arena-size-20480",
] }
embassy-time = { version = "0.4.0", features = ["defmt"] }
embedded-io = { version = "0.6.1", features = ["defmt-03"] }
embedded-io-async = { version = "0.6.1", features = ["defmt-03"] }
esp-alloc = { version = "0.8.0", features = ["defmt"] }
esp-hal-embassy = { version = "0.8.1", features = ["defmt", "esp32c6"] }
esp-wifi = { version = "0.14.1", features = [
  "ble",
  "builtin-scheduler",
  "defmt",
  "esp-alloc",
  "esp32c6",
] }
embassy-sync = { version = "0.7.0", default-features = false }
panic-rtt-target = { version = "0.2.0", features = ["defmt"] }
rtt-target = { version = "0.6.1", features = ["defmt"] }
static_cell = { version = "2.1.0", features = ["nightly"] }
trouble-host = { version = "0.1.0", features = ["gatt"] }

# I2C dependencies
embedded-hal-02 = { package = "embedded-hal", version = "0.2.7" }
embedded-hal-async = "1.0.0"
log = "0.4.27"

[dev-dependencies]
embedded-test = { version = "0.6.0", features = [
  "defmt",
  "embassy",
  "external-executor",
] }

[profile.dev]
# Rust debug is too slow.
# For debug builds always builds with some optimization
opt-level = "s"

[profile.release]
codegen-units    = 1     # LLVM can perform better optimizations using a single thread
debug            = 2
debug-assertions = false
incremental      = false
lto              = 'fat'
opt-level        = 's'
overflow-checks  = false
